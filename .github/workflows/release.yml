name: release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cache go mod
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go
      - name: build nydus-snapshotter
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.43.0
          export PATH=$PATH:$(go env GOPATH)/bin
          make
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nydus-snapshotter_artifacts
          path: |
            bin/containerd-nydus-grpc
  upload:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: install hub
        run: |
          HUB_VER=$(curl -s "https://api.github.com/repos/github/hub/releases/latest" | jq -r .tag_name | sed 's/^v//')
          wget -q -O- https://github.com/github/hub/releases/download/v$HUB_VER/hub-linux-amd64-$HUB_VER.tgz | \
          tar xz --strip-components=2 --wildcards '*/bin/hub'
          sudo mv hub /usr/local/bin/hub
      - name: download artifacts
        uses: actions/download-artifact@v2
        with:
          name: nydus-snapshotter_artifacts
          path: nydus-snapshotter
      - name: upload artifacts
        run: |
          tag=$(echo $GITHUB_REF | cut -d/ -f3-)
          tarball="nydus-snapshotter-$tag-x86_64.tgz"
          chmod +x nydus-snapshotter/*
          tar cf - nydus-snapshotter | gzip > ${tarball}
          echo "uploading ${tarball} for tag $tag ..."
          GITHUB_TOKEN=${{ secrets.HUB_UPLOAD_TOKEN }} hub release create -m "Nydus-snapshotter $tag" -m "Nydus-snapshotter $tag release" -a "${tarball}" "$tag"
